version: '3.8'

services:
  # 1. Der Reverse Proxy (Eingangstor)
 # proxy:
  #  image: 'jc21/nginx-proxy-manager:latest'
   # container_name: proxy
    #restart: unless-stopped
    #volumes:
     # - ./npm-data:/data
      #- ./npm-letsencrypt:/etc/letsencrypt
    #networks:
     # - Intern-netzwerk

  # 2. Dein Webserver (wird das Dashboard)
  webserver:
    image: 'php:8.2-apache'
    container_name: webserver
    restart: unless-stopped
    ports:
      # Veröffentlicht den Webserver auf dem Standard-HTTP-Port (Port 80)
      - '80:80'
    volumes:
      # Hier baust du dein Dashboard (index.php, index.html, etc.)
      - ./web:/var/www/html
    networks:
      - Intern-netzwerk
      - Daten-netzwerk
    # Kein Port! Zugriff nur über den Proxy

  # 3. Nextcloud
  nextcloud:
    image: 'nextcloud:latest'
    container_name: nextcloud
    restart: unless-stopped
    ports:
      # Veröffentlicht Nextcloud auf Port 8080. Du erreichst es über <IP>:8080
      - '8080:80'
    volumes:
      - nextcloud-data:/var/www/html
    environment:
      - MYSQL_HOST=db
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MYSQL_PASSWORD=Vollzeittrinker # ÄNDERN!
    depends_on:
      - db
    networks:
      - Intern-netzwerk
      - Daten-netzwerk

  # 4. Die Datenbank
  db:
    image: 'mariadb:latest'
    container_name: db
    restart: unless-stopped
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    volumes:
      - db-data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=Wurzelchef # ÄNDERN!
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MYSQL_PASSWORD=Vollzeittrinker # ÄNDERN!
    networks:
      - Daten-netzwerk

# Definition der Docker-Netzwerke
networks:
  Intern-netzwerk:
    driver: bridge
  Daten-netzwerk:
    driver: bridge

# Definition der Docker-Volumes
volumes:
  npm-data:
  npm-letsencrypt:
  nextcloud-data:
  db-data: